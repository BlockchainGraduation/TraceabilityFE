import { LeftArrow, RightArrow } from '@/app/[locale]/home/components/Category';
import staticVariables from '@/static';
import { UserOutlined } from '@ant-design/icons';
import {
  Avatar,
  Collapse,
  ConfigProvider,
  Image,
  Segmented,
  Typography,
} from 'antd';
import { SegmentedValue } from 'antd/es/segmented';
import React, { useState } from 'react';
import { ScrollMenu } from 'react-horizontal-scrolling-menu';

export default function RoleSelect({
  onFinishSelectRule,
}: {
  onFinishSelectRule?: (e?: any) => void;
}) {
  const [currentDescriptionPage, setCurrentDescriptionPage] = useState(0);
  const listRuleDescription = [
    {
      rules: 'ABC',
      decription: 'asdasdasd',
      detail: [{ label: 'asd', content: '' }],
    },
  ];
  return (
    <div className="w-full flex">
      <div className="w-1/2 overflow-x-auto">
        <ConfigProvider
          theme={{
            components: { Segmented: { itemSelectedBg: '#47b57c' } },
            token: {
              colorBgLayout: '#E8FFF2B5',
            },
          }}
        >
          <p className="font-bold text-center	text-4xl font-sans text-green-950 mb-[30px]">
            B·∫°n mu·ªën gi·ªØ vai tr√≤ g√¨ trong h·ªá th·ªëng?
          </p>
          <Segmented
            onChange={(e: SegmentedValue) => onFinishSelectRule?.(e)}
            options={[
              {
                label: (
                  <div style={{ padding: 20 }}>
                    <Image
                      alt=""
                      className="rounded object-cover"
                      preview={false}
                      height={100}
                      width={100}
                      src={staticVariables.logo.src}
                    />
                    <div>N√¥ng d√¢n</div>
                  </div>
                ),
                value: 'FAMMER',
                title: 'asdsd',
              },
              {
                label: (
                  <div style={{ padding: 20 }}>
                    <Image
                      alt=""
                      className="rounded object-cover"
                      height={100}
                      width={100}
                      src={staticVariables.logo.src}
                    />
                    <div>Nh√† m√°y</div>
                  </div>
                ),
                value: 'FACTORY',
              },
              {
                label: (
                  <div style={{ padding: 20 }}>
                    <Image
                      alt=""
                      className="rounded object-cover"
                      height={100}
                      width={100}
                      src={staticVariables.logo.src}
                    />
                    <div>Nh√† v·∫≠n chuy·ªÉn</div>
                  </div>
                ),
                value: 'DISTRIBUTER',
              },
              {
                label: (
                  <div style={{ padding: 20 }}>
                    <Image
                      alt=""
                      className="rounded object-cover"
                      height={100}
                      width={100}
                      src={staticVariables.logo.src}
                    />
                    <div>ƒê·∫°i l√≠</div>
                  </div>
                ),
                value: 'SEEDCOMPANY',
              },
            ]}
          />
        </ConfigProvider>
      </div>
      <div className="w-1/2 p-[30px]">
        <p className="text-3xl font-semibold p-[20px]">N√¥ng d√¢n</p>
        <p className="py-[20px]">
          N√¥ng d√¢n l√† nh·ªØng ng∆∞·ªùi lao ƒë·ªông c∆∞ tr√∫ ·ªü n√¥ng th√¥n, tham gia s·∫£n xu·∫•t
          n√¥ng nghi·ªáp. N√¥ng d√¢n s·ªëng ch·ªß y·∫øu b·∫±ng ru·ªông v∆∞·ªùn, sau ƒë√≥ ƒë·∫øn c√°c
          ng√†nh ngh·ªÅ m√† t∆∞ li·ªáu s·∫£n xu·∫•t ch√≠nh l√† ƒë·∫•t ƒëai. T√πy t·ª´ng qu·ªëc gia,
          t·ª´ng th·ªùi k√¨ l·ªãch s·ª≠, ng∆∞·ªùi n√¥ng d√¢n c√≥ quy·ªÅn s·ªü h·ªØu kh√°c nhau v·ªÅ
          ru·ªông ƒë·∫•t. H·ªç h√¨nh th√†nh n√™n giai c·∫•p n√¥ng d√¢n, c√≥ v·ªã tr√≠, vai tr√≤
          nh·∫•t ƒë·ªãnh trong x√£ h·ªôi.
        </p>
        <Collapse
          items={[
            {
              key: '0',
              label: 'Xem m√¥ t·∫£',
              children: (
                <div className="pr-[50px] text-justify">
                  {`This limited series of Midnight Society Access Passes grants the
              holder studio-specific perks including but not limited to: a
              one-of-a-kind "Variant" ü§£üòÇüòäüòä PFP \n
              (profile pic) with unique VisorCortex,
              Call Sign, and other attributes of various rarity. Founders are
              entitled to voting rights on game features, exclusive access to
              studio events, first dibs on merchandise, early access to the
              latest dev build, and more.`}
                </div>
              ),
            },
            {
              key: '3',
              label: 'Xem m√¥ t·∫£',
              children: (
                <div className="pr-[50px] text-justify">
                  {`This limited series of Midnight Society Access Passes grants the
              holder studio-specific perks including but not limited to: a
              one-of-a-kind "Variant" ü§£üòÇüòäüòä PFP \n
              (profile pic) with unique VisorCortex,
              Call Sign, and other attributes of various rarity. Founders are
              entitled to voting rights on game features, exclusive access to
              studio events, first dibs on merchandise, early access to the
              latest dev build, and more.`}
                </div>
              ),
            },
          ]}
        />
      </div>
    </div>
  );
}
